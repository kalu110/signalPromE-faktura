<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QBqkQjqkRFqkRnqkSJqkSlqkAQEAOw==
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QBqkQjqkRFqkRnqkSJqkSlqkAQEAOw==
</value>
  </data>
</root>